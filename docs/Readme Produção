üì¶ WhatsApp ChatGPT Bot ‚Äî Produ√ß√£o (Ambiente VPS com Docker)
Este bot automatiza conversas no WhatsApp utilizando a API da Meta (tokens tempor√°rios ou permanentes) e integra respostas com a API do ChatGPT. Est√° pronto para ser executado em ambiente Docker, com banco de dados MySQL e backend Node.js (TypeScript + Express).

üìÅ Estrutura do Projeto
bash
Copiar
Editar
whatsapp-chatgpt-bot/
‚îú‚îÄ‚îÄ docker-compose.yml
‚îú‚îÄ‚îÄ Dockerfile
‚îú‚îÄ‚îÄ .env
‚îú‚îÄ‚îÄ .env.example
‚îú‚îÄ‚îÄ /src
‚îÇ ‚îú‚îÄ‚îÄ app.ts
‚îÇ ‚îú‚îÄ‚îÄ server.ts
‚îÇ ‚îú‚îÄ‚îÄ config/
‚îÇ ‚îú‚îÄ‚îÄ controllers/
‚îÇ ‚îú‚îÄ‚îÄ services/
‚îÇ ‚îú‚îÄ‚îÄ prompts/
‚îÇ ‚îú‚îÄ‚îÄ utils/
‚îÇ ‚îî‚îÄ‚îÄ middlewares/
‚îú‚îÄ‚îÄ /scripts
‚îú‚îÄ‚îÄ /docs
‚îú‚îÄ‚îÄ /tests
‚îî‚îÄ‚îÄ package.json
‚öôÔ∏è Pr√©-requisitos (na VPS)
Ubuntu 20.04 ou superior

Docker >= 20.x

docker-compose instalado (docker-compose separado, n√£o docker compose)

Porta 3000 aberta para HTTP

Porta 3306 para MySQL (internamente)

Porta 80 (caso use proxy reverso)

Node.js e Git (para debugging local se necess√°rio)

üõ†Ô∏è Instala√ß√£o
Clone o reposit√≥rio

bash
Copiar
Editar
git clone https://github.com/seu-usuario/whatsapp-chatgpt-bot.git
cd whatsapp-chatgpt-bot
Configure o .env

Copie o arquivo de exemplo:

bash
Copiar
Editar
cp .env.example .env
Edite o .env com os dados reais de:

Token tempor√°rio da Meta

ID do n√∫mero de telefone

ID da conta Business

Chave da OpenAI

Configura√ß√£o do banco de dados

Par√¢metros de delay, timeout, etc.

Build e Deploy com Docker Compose

bash
Copiar
Editar
docker-compose up -d --build
Logs

bash
Copiar
Editar
docker-compose logs -f app
üì® Webhook da Meta
Configure o webhook no Meta Developer Portal apontando para:

arduino
Copiar
Editar
https://seu-dominio-ou-ngrok/webhook
Verifique se o endpoint responde 200 OK a um GET de verifica√ß√£o.

üß™ Testes
Para testar localmente (caso queira):

bash
Copiar
Editar
npm install
npm run dev
Use o Ngrok para expor a porta 3000:

bash
Copiar
Editar
ngrok http 3000
üîê Seguran√ßa
Nunca comite .env com dados reais

O container isola o processo do app, mas ainda assim proteja portas expostas

Use tokens tempor√°rios para testes e definitivos apenas ap√≥s verifica√ß√£o completa

Crie backups regulares do banco de dados (/mnt/mysql no container)

O bot est√° preparado para detectar comportamentos suspeitos (ex: mensagens abusivas) e encerrar conversas

üîÑ CI/CD (caso esteja integrado)
A pipeline no GitHub Actions valida o lint e testes

Ap√≥s push para a branch main ou prod, o build Docker pode ser disparado automaticamente (configur√°vel no .github/workflows/)

üß± Banco de Dados
MySQL rodando no container mysql

Persist√™ncia via volume Docker

Scripts de migra√ß√£o futura ser√£o adicionados na pasta /scripts/migrations

üß† Estrutura dos Prompts
Os prompts ficam em:

bash
Copiar
Editar
src/prompts/
‚îú‚îÄ‚îÄ 01-sistema.ts
‚îú‚îÄ‚îÄ 02-prospeccao.ts
‚îú‚îÄ‚îÄ 03-obje√ß√µes.ts
‚îú‚îÄ‚îÄ ...
Cada arquivo exporta um const prompt que √© carregado dinamicamente pelo conversationManager.

üß∞ Principais Comandos
A√ß√£o Comando
Subir containers docker-compose up -d
Ver logs docker-compose logs -f app
Parar containers docker-compose down
Rebuild for√ßado docker-compose up -d --build
Shell no app docker-compose exec app sh
Shell no banco docker-compose exec db mysql -uroot -p
Rodar local com dev npm run dev
Validar c√≥digo (ESLint) npm run lint
Testar conex√£o com o DB testDbConnection() via c√≥digo

üóÉÔ∏è Backup e Volume do MySQL
Volume local (persistente):

yaml
Copiar
Editar
volumes:
mysql_data:/var/lib/mysql
Para backup:

bash
Copiar
Editar
docker exec CONTAINER_ID /usr/bin/mysqldump -u root --password=SUASENHA db_name > backup.sql
üßØ Troubleshooting
Bot n√£o responde?

Verifique token do WhatsApp e logs do webhook

Rode curl -X GET no endpoint /webhook para teste

Erro 401 ou 403 no WhatsApp?

Token expirado

Container cai?

Verifique .env, especialmente vari√°veis do banco e API

Banco n√£o conecta?

Aguarde reconex√µes autom√°ticas (retry com delay exponencial j√° implementado)

üöß Roadmap Futuro
Autentica√ß√£o multiusu√°rio (SaaS)

Interface Web para onboarding de novos bots

Integra√ß√£o com Shopify ou WooCommerce

Monitoramento por Prometheus ou Grafana

Prompt adapt√°vel com NLP local

‚úçÔ∏è Autores
Projeto iniciado por Maur√≠cio Freitas em 2025

Documenta√ß√£o mantida por GPT-4 em colabora√ß√£o com o time de engenharia fict√≠cio
